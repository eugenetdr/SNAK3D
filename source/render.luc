module render (
    input clk,  // clock
    input rst,  // reset
    input snk_hd_pos[12],
    input snk_bd_pos[12],
    input snk_tl_pos[12],  
    input food_pos[12],  
    input wernd,
    output led_cols_out[5],
    output led_rows_out[25]
  ) {
  
    
  const NUMBER_ROWS = 5;
  const NUMBER_COLUMNS = 25;
  .clk(clk)
  {
    .rst(rst)
    {
      dff snk_hd_state[125];
      dff snk_bd_state[125];
      dff snk_tl_state[125];
      dff food_state[125];
      dff led_state[125];
      
      dff rows[NUMBER_ROWS];
      dff cols[NUMBER_COLUMNS];
      
    } 
  }

    
  always {    
    led_state.d = 0;    
    led_rows_out = rows.q;
    led_cols_out = cols.q;

    
    //if render state, load up the position to the led_state
    if(wernd)
    {
      snk_hd_state.d = c{124x{0},1b1} << (snk_hd_pos[11:8] + (NUMBER_ROWS * snk_hd_pos[7:4]) + (NUMBER_COLUMNS * snk_hd_pos[3:0]));
      snk_bd_state.d = c{124x{0},1b1} << (snk_bd_pos[11:8] + (NUMBER_ROWS * snk_bd_pos[7:4]) + (NUMBER_COLUMNS * snk_bd_pos[3:0]));
      snk_tl_state.d = c{124x{0},1b1} << (snk_tl_pos[11:8] + (NUMBER_ROWS * snk_tl_pos[7:4]) + (NUMBER_COLUMNS * snk_tl_pos[3:0]));
      food_state.d = c{124x{0},1b1} << (food_pos[11:8] + (NUMBER_ROWS * food_pos[7:4]) + (NUMBER_COLUMNS * food_pos[3:0]));
      led_state.d = snk_hd_state.q | snk_bd_state.q | snk_tl_state.q | food_state.q;
    }
    
    rows.d = 5b00001;
    //shift bit left to each row
    
    //read respective cols for state
    if (rows.q[0])
    {
        cols.d = led_state.q[124:100];
        rows.d = rows.q << 1;        
    }    
    else if(rows.q[1])
    {
        cols.d = led_state.q[99:75];
        rows.d = rows.q << 1;        
    }     
    else if(rows.q[2])
    {
        cols.d = led_state.q[74:50];
        rows.d = rows.q << 1;        
    }    
    else if(rows.q[3])
    {
        cols.d = led_state.q[49:25];
        rows.d = rows.q << 1;        
    }   
    else if(rows.q[4])
    {
        cols.d = led_state.q[24:0];
        rows.d = 5b00001;        
    }   
    else {
       rows.d = 5b00001;        
    }  
  }
}
