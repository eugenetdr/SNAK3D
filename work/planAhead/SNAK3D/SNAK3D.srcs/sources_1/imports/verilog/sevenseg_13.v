/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module sevenseg_13 (
    input clk,
    input rst,
    input [15:0] d,
    output reg [13:0] q
  );
  
  
  
  reg [6:0] tens_out;
  
  reg [6:0] ones_out;
  
  reg [15:0] M_ones_d, M_ones_q = 1'h0;
  reg [15:0] M_tens_d, M_tens_q = 1'h0;
  reg [3:0] M_ones_mod_d, M_ones_mod_q = 1'h0;
  reg [3:0] M_tens_mod_d, M_tens_mod_q = 1'h0;
  
  always @* begin
    M_tens_d = M_tens_q;
    M_ones_d = M_ones_q;
    M_ones_mod_d = M_ones_mod_q;
    M_tens_mod_d = M_tens_mod_q;
    
    if (M_ones_q > 4'ha) begin
      M_ones_d = M_ones_q - 4'ha;
    end else begin
      M_ones_mod_d = M_ones_q[0+3-:4];
      M_ones_d = d;
    end
    if (M_tens_q > 4'ha) begin
      M_tens_d = M_tens_q - 4'ha;
    end else begin
      M_tens_mod_d = M_tens_q[0+3-:4];
      M_tens_d = d / 4'ha;
    end
    
    case (M_ones_mod_q)
      1'h1: begin
        ones_out = 7'h30;
      end
      2'h2: begin
        ones_out = 7'h6d;
      end
      2'h3: begin
        ones_out = 7'h79;
      end
      3'h4: begin
        ones_out = 7'h33;
      end
      3'h5: begin
        ones_out = 7'h5b;
      end
      3'h6: begin
        ones_out = 7'h5f;
      end
      3'h7: begin
        ones_out = 7'h70;
      end
      4'h8: begin
        ones_out = 7'h7f;
      end
      4'h9: begin
        ones_out = 7'h73;
      end
      default: begin
        ones_out = 7'h7e;
      end
    endcase
    
    case (M_tens_mod_q)
      1'h1: begin
        tens_out = 7'h30;
      end
      2'h2: begin
        tens_out = 7'h6d;
      end
      2'h3: begin
        tens_out = 7'h79;
      end
      3'h4: begin
        tens_out = 7'h33;
      end
      3'h5: begin
        tens_out = 7'h5b;
      end
      3'h6: begin
        tens_out = 7'h5f;
      end
      3'h7: begin
        tens_out = 7'h70;
      end
      4'h8: begin
        tens_out = 7'h7f;
      end
      4'h9: begin
        tens_out = 7'h73;
      end
      default: begin
        tens_out = 7'h7e;
      end
    endcase
    q = {tens_out, ones_out};
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_ones_q <= 1'h0;
      M_tens_q <= 1'h0;
      M_ones_mod_q <= 1'h0;
      M_tens_mod_q <= 1'h0;
    end else begin
      M_ones_q <= M_ones_d;
      M_tens_q <= M_tens_d;
      M_ones_mod_q <= M_ones_mod_d;
      M_tens_mod_q <= M_tens_mod_d;
    end
  end
  
endmodule
