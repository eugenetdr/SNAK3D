/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [16-1:0] M_alu_out;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu16_1 alu (
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .out(M_alu_out),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  wire [16-1:0] M_aselector_out;
  reg [16-1:0] M_aselector_a;
  reg [16-1:0] M_aselector_b;
  reg [16-1:0] M_aselector_c;
  reg [16-1:0] M_aselector_d;
  reg [2-1:0] M_aselector_sel;
  sel4_2 aselector (
    .a(M_aselector_a),
    .b(M_aselector_b),
    .c(M_aselector_c),
    .d(M_aselector_d),
    .sel(M_aselector_sel),
    .out(M_aselector_out)
  );
  
  wire [16-1:0] M_bselector_out;
  reg [16-1:0] M_bselector_a;
  reg [16-1:0] M_bselector_b;
  reg [16-1:0] M_bselector_c;
  reg [16-1:0] M_bselector_d;
  reg [2-1:0] M_bselector_sel;
  sel4_2 bselector (
    .a(M_bselector_a),
    .b(M_bselector_b),
    .c(M_bselector_c),
    .d(M_bselector_d),
    .sel(M_bselector_sel),
    .out(M_bselector_out)
  );
  
  wire [14-1:0] M_scoreseg_q;
  reg [16-1:0] M_scoreseg_d;
  sevenseg_4 scoreseg (
    .d(M_scoreseg_d),
    .q(M_scoreseg_q)
  );
  
  wire [14-1:0] M_timerseg_q;
  reg [16-1:0] M_timerseg_d;
  sevenseg_4 timerseg (
    .d(M_timerseg_d),
    .q(M_timerseg_q)
  );
  
  wire [2-1:0] M_clogic_asel;
  wire [2-1:0] M_clogic_bsel;
  wire [6-1:0] M_clogic_alufn;
  wire [1-1:0] M_clogic_wesnkhd;
  wire [1-1:0] M_clogic_wesnkpos;
  wire [1-1:0] M_clogic_wefood;
  wire [1-1:0] M_clogic_wescr;
  wire [1-1:0] M_clogic_wernd;
  wire [1-1:0] M_clogic_wetmr;
  reg [16-1:0] M_clogic_opcode;
  controllogic_6 clogic (
    .opcode(M_clogic_opcode),
    .asel(M_clogic_asel),
    .bsel(M_clogic_bsel),
    .alufn(M_clogic_alufn),
    .wesnkhd(M_clogic_wesnkhd),
    .wesnkpos(M_clogic_wesnkpos),
    .wefood(M_clogic_wefood),
    .wescr(M_clogic_wescr),
    .wernd(M_clogic_wernd),
    .wetmr(M_clogic_wetmr)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_7 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [16-1:0] M_game_opcode;
  reg [1-1:0] M_game_time_out;
  reg [16-1:0] M_game_aluout;
  gameengine_8 game (
    .clk(clk),
    .rst(rst),
    .time_out(M_game_time_out),
    .aluout(M_game_aluout),
    .opcode(M_game_opcode)
  );
  wire [4-1:0] M_control_dx;
  wire [4-1:0] M_control_dy;
  wire [4-1:0] M_control_dz;
  reg [6-1:0] M_control_buttons;
  controls_9 control (
    .clk(clk),
    .rst(rst),
    .buttons(M_control_buttons),
    .dx(M_control_dx),
    .dy(M_control_dy),
    .dz(M_control_dz)
  );
  wire [12-1:0] M_snake_snk_hd_pos;
  wire [12-1:0] M_snake_snk_bd_pos;
  wire [12-1:0] M_snake_snk_tl_pos;
  reg [4-1:0] M_snake_dx;
  reg [4-1:0] M_snake_dy;
  reg [4-1:0] M_snake_dz;
  reg [1-1:0] M_snake_wesnkhd;
  reg [1-1:0] M_snake_wesnkpos;
  snake_10 snake (
    .clk(clk),
    .rst(rst),
    .dx(M_snake_dx),
    .dy(M_snake_dy),
    .dz(M_snake_dz),
    .wesnkhd(M_snake_wesnkhd),
    .wesnkpos(M_snake_wesnkpos),
    .snk_hd_pos(M_snake_snk_hd_pos),
    .snk_bd_pos(M_snake_snk_bd_pos),
    .snk_tl_pos(M_snake_snk_tl_pos)
  );
  wire [16-1:0] M_score_out;
  reg [1-1:0] M_score_wescr;
  reg [16-1:0] M_score_aluout;
  score_11 score (
    .clk(clk),
    .rst(rst),
    .wescr(M_score_wescr),
    .aluout(M_score_aluout),
    .out(M_score_out)
  );
  wire [6-1:0] M_timer_game_time;
  wire [1-1:0] M_timer_time_out;
  wire [16-1:0] M_timer_clk_count;
  wire [16-1:0] M_timer_frame_period;
  reg [1-1:0] M_timer_wetmr;
  timer_12 timer (
    .clk(clk),
    .rst(rst),
    .wetmr(M_timer_wetmr),
    .game_time(M_timer_game_time),
    .time_out(M_timer_time_out),
    .clk_count(M_timer_clk_count),
    .frame_period(M_timer_frame_period)
  );
  wire [12-1:0] M_food_food_pos;
  reg [1-1:0] M_food_wefood;
  food_13 food (
    .clk(clk),
    .rst(rst),
    .wefood(M_food_wefood),
    .food_pos(M_food_food_pos)
  );
  wire [5-1:0] M_render_led_rows_out;
  wire [25-1:0] M_render_led_cols_out;
  reg [12-1:0] M_render_snk_hd_pos;
  reg [12-1:0] M_render_snk_bd_pos;
  reg [12-1:0] M_render_snk_tl_pos;
  reg [12-1:0] M_render_food_pos;
  reg [1-1:0] M_render_wernd;
  reg [4-1:0] M_render_dx;
  reg [4-1:0] M_render_dy;
  reg [4-1:0] M_render_dz;
  render_14 render (
    .clk(clk),
    .rst(rst),
    .snk_hd_pos(M_render_snk_hd_pos),
    .snk_bd_pos(M_render_snk_bd_pos),
    .snk_tl_pos(M_render_snk_tl_pos),
    .food_pos(M_render_food_pos),
    .wernd(M_render_wernd),
    .dx(M_render_dx),
    .dy(M_render_dy),
    .dz(M_render_dz),
    .led_rows_out(M_render_led_rows_out),
    .led_cols_out(M_render_led_cols_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    M_bselector_d = 1'h0;
    M_game_aluout = M_alu_out;
    M_alu_alufn = M_clogic_alufn;
    M_alu_a = M_aselector_out;
    M_alu_b = M_bselector_out;
    M_clogic_opcode = M_game_opcode;
    M_aselector_sel = M_clogic_asel;
    M_bselector_sel = M_clogic_bsel;
    M_snake_dx = M_control_dx;
    M_snake_dy = M_control_dy;
    M_snake_dz = M_control_dz;
    M_snake_wesnkhd = M_clogic_wesnkhd;
    M_snake_wesnkpos = M_clogic_wesnkpos;
    M_score_aluout = M_alu_out;
    M_score_wescr = M_clogic_wescr;
    M_timer_wetmr = M_clogic_wetmr;
    M_food_wefood = M_clogic_wefood;
    M_render_snk_hd_pos = M_snake_snk_hd_pos;
    M_render_snk_bd_pos = M_snake_snk_bd_pos;
    M_render_snk_tl_pos = M_snake_snk_tl_pos;
    M_render_dx = 1'h0;
    M_render_dy = 1'h0;
    M_render_dz = 1'h0;
    M_render_food_pos = M_food_food_pos;
    M_render_wernd = M_clogic_wernd;
    M_aselector_b = M_snake_snk_hd_pos;
    M_aselector_c = M_score_out;
    M_bselector_c = 1'h1;
    M_game_time_out = M_timer_time_out;
    M_aselector_a = M_timer_frame_period;
    M_bselector_a = M_timer_clk_count;
    M_aselector_d = 1'h0;
    M_bselector_b = M_food_food_pos;
    M_scoreseg_d = M_score_out;
    M_timerseg_d = {10'h000, M_timer_game_time};
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hb;
    M_control_buttons = {1'h0, io_button[0+4-:5]};
  end
endmodule
