/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module controls_7 (
    input clk,
    input rst,
    input [5:0] buttons,
    output reg [3:0] dx,
    output reg [3:0] dy,
    output reg [3:0] dz
  );
  
  
  
  localparam X_POS_direction = 3'd0;
  localparam X_NEG_direction = 3'd1;
  localparam Y_POS_direction = 3'd2;
  localparam Y_NEG_direction = 3'd3;
  localparam Z_POS_direction = 3'd4;
  localparam Z_NEG_direction = 3'd5;
  
  reg [2:0] M_direction_d, M_direction_q = X_POS_direction;
  
  always @* begin
    M_direction_d = M_direction_q;
    
    dx = 1'h0;
    dy = 1'h0;
    dz = 1'h0;
    
    case (M_direction_q)
      X_POS_direction: begin
        dx = 1'h1;
        dy = 1'h0;
        dz = 1'h0;
        if (buttons[1+0-:1]) begin
          M_direction_d = X_NEG_direction;
        end
        if (buttons[2+0-:1]) begin
          M_direction_d = Y_POS_direction;
        end
        if (buttons[3+0-:1]) begin
          M_direction_d = Y_NEG_direction;
        end
        if (buttons[4+0-:1]) begin
          M_direction_d = Z_POS_direction;
        end
        if (buttons[5+0-:1]) begin
          M_direction_d = Z_NEG_direction;
        end
      end
      X_NEG_direction: begin
        dx = $signed(2'h3);
        dy = 1'h0;
        dz = 1'h0;
        if (buttons[0+0-:1]) begin
          M_direction_d = X_POS_direction;
        end
        if (buttons[2+0-:1]) begin
          M_direction_d = Y_POS_direction;
        end
        if (buttons[3+0-:1]) begin
          M_direction_d = Y_NEG_direction;
        end
        if (buttons[4+0-:1]) begin
          M_direction_d = Z_POS_direction;
        end
        if (buttons[5+0-:1]) begin
          M_direction_d = Z_NEG_direction;
        end
      end
      Y_POS_direction: begin
        dx = 1'h0;
        dy = 1'h1;
        dz = 1'h0;
        if (buttons[0+0-:1]) begin
          M_direction_d = X_POS_direction;
        end
        if (buttons[1+0-:1]) begin
          M_direction_d = X_NEG_direction;
        end
        if (buttons[3+0-:1]) begin
          M_direction_d = Y_NEG_direction;
        end
        if (buttons[4+0-:1]) begin
          M_direction_d = Z_POS_direction;
        end
        if (buttons[5+0-:1]) begin
          M_direction_d = Z_NEG_direction;
        end
      end
      Y_NEG_direction: begin
        dx = 1'h0;
        dy = $signed(2'h3);
        dz = 1'h0;
        if (buttons[0+0-:1]) begin
          M_direction_d = X_POS_direction;
        end
        if (buttons[1+0-:1]) begin
          M_direction_d = X_NEG_direction;
        end
        if (buttons[2+0-:1]) begin
          M_direction_d = Y_POS_direction;
        end
        if (buttons[4+0-:1]) begin
          M_direction_d = Z_POS_direction;
        end
        if (buttons[5+0-:1]) begin
          M_direction_d = Z_NEG_direction;
        end
      end
      Z_POS_direction: begin
        dx = 1'h0;
        dy = 1'h0;
        dz = 1'h1;
        if (buttons[0+0-:1]) begin
          M_direction_d = X_POS_direction;
        end
        if (buttons[1+0-:1]) begin
          M_direction_d = X_NEG_direction;
        end
        if (buttons[2+0-:1]) begin
          M_direction_d = Y_POS_direction;
        end
        if (buttons[3+0-:1]) begin
          M_direction_d = Y_NEG_direction;
        end
        if (buttons[5+0-:1]) begin
          M_direction_d = Z_NEG_direction;
        end
      end
      Z_NEG_direction: begin
        dx = 1'h0;
        dy = 1'h0;
        dz = $signed(2'h3);
        if (buttons[0+0-:1]) begin
          M_direction_d = X_POS_direction;
        end
        if (buttons[1+0-:1]) begin
          M_direction_d = X_NEG_direction;
        end
        if (buttons[2+0-:1]) begin
          M_direction_d = Y_POS_direction;
        end
        if (buttons[3+0-:1]) begin
          M_direction_d = Y_NEG_direction;
        end
        if (buttons[4+0-:1]) begin
          M_direction_d = Z_POS_direction;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_direction_q <= 1'h0;
    end else begin
      M_direction_q <= M_direction_d;
    end
  end
  
endmodule
